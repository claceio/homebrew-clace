# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class Clace < Formula
  desc ""
  homepage "https://clace.io"
  version "0.12.4"

  depends_on "mkcert"

  on_macos do
    on_intel do
      url "https://github.com/claceio/clace/releases/download/v0.12.4/clace-v0.12.4-darwin-amd64.tar.gz"
      sha256 "9c526e43bb0250442e2640b9de6813992a9d673f0a920ed3f92db28394ec7870"

      def install
        bin.install "clace"
      end
    end
    on_arm do
      url "https://github.com/claceio/clace/releases/download/v0.12.4/clace-v0.12.4-darwin-arm64.tar.gz"
      sha256 "b9b6668c3fc2574c0867cbe66a8141a4f692db14c47f854d0c4a22340784652a"

      def install
        bin.install "clace"
      end
    end
  end

  on_linux do
    on_intel do
      if Hardware::CPU.is_64_bit?
        url "https://github.com/claceio/clace/releases/download/v0.12.4/clace-v0.12.4-linux-amd64.tar.gz"
        sha256 "0a897c9c2804a20c69175ba4316ee3f3a3078fac8f8a2cf00a21b4e840a04952"

        def install
          bin.install "clace"
        end
      end
    end
    on_arm do
      if Hardware::CPU.is_64_bit?
        url "https://github.com/claceio/clace/releases/download/v0.12.4/clace-v0.12.4-linux-arm64.tar.gz"
        sha256 "40882eb06285983c608f9d370a238135229b7c6d64d1f63c8ee1a1a9eff95382"

        def install
          bin.install "clace"
        end
      end
    end
  end

  def post_install
    unless File.exist?("#{etc}/clace.toml")
      pid = spawn("#{opt_bin}/clace password", out: "#{etc}/clace.toml")
      puts "********** Initializing \"admin\" user **********"
      Process.wait(pid)
      puts "************* Save this password ****************"

      mkcert_path = `which mkcert`.chomp
      unless mkcert_path.empty?
        system("mkdir -p #{HOMEBREW_PREFIX}/var/clace/config/certificates")
        system("#{mkcert_path} -install")
        system("#{mkcert_path} -cert-file #{HOMEBREW_PREFIX}/var/clace/config/certificates/default.crt -key-file #{HOMEBREW_PREFIX}/var/clace/config/certificates/default.key localhost 127.0.0.1 \"*.localhost\"")
        puts "Created localhost TLS certificates"
      end
    end
  end

  service do
    run [ opt_bin/"clace", "server", "start" ]
    keep_alive true
    working_dir HOMEBREW_PREFIX
    log_path var/"log/clace.log"
    error_log_path var/"log/clace.log"
  end
end
