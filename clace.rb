# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class Clace < Formula
  desc ""
  homepage "https://clace.io"
  version "0.13.2"

  depends_on "mkcert"

  on_macos do
    on_intel do
      url "https://github.com/claceio/clace/releases/download/v0.13.2/clace-v0.13.2-darwin-amd64.tar.gz"
      sha256 "8eea0b35db6ede2325871b279b3e8a5bf1eee0895f7ef25b820c8195f93af4f5"

      def install
        bin.install "clace"
      end
    end
    on_arm do
      url "https://github.com/claceio/clace/releases/download/v0.13.2/clace-v0.13.2-darwin-arm64.tar.gz"
      sha256 "2e7f1bb06cf7b0e6bce895b630a24e401bd547627286975ea8836b24746c1b06"

      def install
        bin.install "clace"
      end
    end
  end

  on_linux do
    on_intel do
      if Hardware::CPU.is_64_bit?
        url "https://github.com/claceio/clace/releases/download/v0.13.2/clace-v0.13.2-linux-amd64.tar.gz"
        sha256 "0bd2cac31c4d2f71ad3cf032d3d9beb750402300949d8dce6d7bd07b436c49f6"

        def install
          bin.install "clace"
        end
      end
    end
    on_arm do
      if Hardware::CPU.is_64_bit?
        url "https://github.com/claceio/clace/releases/download/v0.13.2/clace-v0.13.2-linux-arm64.tar.gz"
        sha256 "97c088f51b3a23417dd171ec5b212eaa70d6d3fa96887bc1d08400806595cc80"

        def install
          bin.install "clace"
        end
      end
    end
  end

  def post_install
    unless File.exist?("#{etc}/clace.toml")
      pid = spawn("#{opt_bin}/clace password", out: "#{etc}/clace.toml")
      puts "********** Initializing \"admin\" user **********"
      Process.wait(pid)
      puts "************* Save this password ****************"

      mkcert_path = `which mkcert`.chomp
      unless mkcert_path.empty?
        system("mkdir -p #{HOMEBREW_PREFIX}/var/clace/config/certificates")
        system("#{mkcert_path} -install")
        system("#{mkcert_path} -cert-file #{HOMEBREW_PREFIX}/var/clace/config/certificates/default.crt -key-file #{HOMEBREW_PREFIX}/var/clace/config/certificates/default.key localhost 127.0.0.1 \"*.localhost\"")
        puts "Created localhost TLS certificates"
      end
    end
  end

  service do
    run [ opt_bin/"clace", "server", "start" ]
    keep_alive true
    working_dir HOMEBREW_PREFIX
    log_path var/"log/clace.log"
    error_log_path var/"log/clace.log"
  end
end
