# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class Clace < Formula
  desc ""
  homepage "https://clace.io"
  version "0.11.12"

  depends_on "mkcert"

  on_macos do
    on_intel do
      url "https://github.com/claceio/clace/releases/download/v0.11.12/clace-v0.11.12-darwin-amd64.tar.gz"
      sha256 "1e11cb0f88ff0644fcc9f92388f941d725c879b99e5f7a2233537598ef094e31"

      def install
        bin.install "clace"
      end
    end
    on_arm do
      url "https://github.com/claceio/clace/releases/download/v0.11.12/clace-v0.11.12-darwin-arm64.tar.gz"
      sha256 "73ed1a4effb41270e2427db9120f331bf43b41d2f7c9485ae5c9434e6f12be9b"

      def install
        bin.install "clace"
      end
    end
  end

  on_linux do
    on_intel do
      if Hardware::CPU.is_64_bit?
        url "https://github.com/claceio/clace/releases/download/v0.11.12/clace-v0.11.12-linux-amd64.tar.gz"
        sha256 "984578e6d0e8c0841cf6d68c36e2649158e865aefe82e5eea1b0e564b8082229"

        def install
          bin.install "clace"
        end
      end
    end
    on_arm do
      if Hardware::CPU.is_64_bit?
        url "https://github.com/claceio/clace/releases/download/v0.11.12/clace-v0.11.12-linux-arm64.tar.gz"
        sha256 "38f0ffd4cfaccf19e791c29ff745c4a1b4a60fa8f6fc1802fe1ac47de2e7d595"

        def install
          bin.install "clace"
        end
      end
    end
  end

  def post_install
    unless File.exist?("#{etc}/clace.toml")
      pid = spawn("#{opt_bin}/clace password", out: "#{etc}/clace.toml")
      puts "********** Initializing \"admin\" user **********"
      Process.wait(pid)
      puts "************* Save this password ****************"

      mkcert_path = `which mkcert`.chomp
      unless mkcert_path.empty?
        system("mkdir -p #{HOMEBREW_PREFIX}/var/clace/config/certificates")
        system("#{mkcert_path} -install")
        system("#{mkcert_path} -cert-file #{HOMEBREW_PREFIX}/var/clace/config/certificates/default.crt -key-file #{HOMEBREW_PREFIX}/var/clace/config/certificates/default.key localhost 127.0.0.1 \"*.localhost\"")
        puts "Created localhost TLS certificates"
      end
    end
  end

  service do
    run [ opt_bin/"clace", "server", "start" ]
    keep_alive true
    working_dir HOMEBREW_PREFIX
    log_path var/"log/clace.log"
    error_log_path var/"log/clace.log"
  end
end
