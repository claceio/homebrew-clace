# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class Clace < Formula
  desc ""
  homepage "https://clace.io"
  version "0.11.23"

  depends_on "mkcert"

  on_macos do
    on_intel do
      url "https://github.com/claceio/clace/releases/download/v0.11.23/clace-v0.11.23-darwin-amd64.tar.gz"
      sha256 "e88b7fe21f3650a3b9f7a62e8760f348e7594afa4821a0e1e76dda8af42032de"

      def install
        bin.install "clace"
      end
    end
    on_arm do
      url "https://github.com/claceio/clace/releases/download/v0.11.23/clace-v0.11.23-darwin-arm64.tar.gz"
      sha256 "2db60d0ea3ddac1781dc8169c17f0b04eae2145c0267999176d34727bce4c57c"

      def install
        bin.install "clace"
      end
    end
  end

  on_linux do
    on_intel do
      if Hardware::CPU.is_64_bit?
        url "https://github.com/claceio/clace/releases/download/v0.11.23/clace-v0.11.23-linux-amd64.tar.gz"
        sha256 "8168e7a78ed0772abc89c08575bd3100dd202a4dbd7c1bb9c1aabf9f46c7e145"

        def install
          bin.install "clace"
        end
      end
    end
    on_arm do
      if Hardware::CPU.is_64_bit?
        url "https://github.com/claceio/clace/releases/download/v0.11.23/clace-v0.11.23-linux-arm64.tar.gz"
        sha256 "08c75688f6afffb5b4fa8688d068ff21cacb937598da531031057d6f5c3f5684"

        def install
          bin.install "clace"
        end
      end
    end
  end

  def post_install
    unless File.exist?("#{etc}/clace.toml")
      pid = spawn("#{opt_bin}/clace password", out: "#{etc}/clace.toml")
      puts "********** Initializing \"admin\" user **********"
      Process.wait(pid)
      puts "************* Save this password ****************"

      mkcert_path = `which mkcert`.chomp
      unless mkcert_path.empty?
        system("mkdir -p #{HOMEBREW_PREFIX}/var/clace/config/certificates")
        system("#{mkcert_path} -install")
        system("#{mkcert_path} -cert-file #{HOMEBREW_PREFIX}/var/clace/config/certificates/default.crt -key-file #{HOMEBREW_PREFIX}/var/clace/config/certificates/default.key localhost 127.0.0.1 \"*.localhost\"")
        puts "Created localhost TLS certificates"
      end
    end
  end

  service do
    run [ opt_bin/"clace", "server", "start" ]
    keep_alive true
    working_dir HOMEBREW_PREFIX
    log_path var/"log/clace.log"
    error_log_path var/"log/clace.log"
  end
end
