# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class Clace < Formula
  desc ""
  homepage "https://clace.io"
  version "0.11.18"

  depends_on "mkcert"

  on_macos do
    on_intel do
      url "https://github.com/claceio/clace/releases/download/v0.11.18/clace-v0.11.18-darwin-amd64.tar.gz"
      sha256 "9c7a24796f63ad4430378cc92d86874816d775529e68dfa55f45713a16f4706c"

      def install
        bin.install "clace"
      end
    end
    on_arm do
      url "https://github.com/claceio/clace/releases/download/v0.11.18/clace-v0.11.18-darwin-arm64.tar.gz"
      sha256 "35ea780e88e6fb519a9b855231fccf600abbfcd6162744f98667fb9702aeb1cf"

      def install
        bin.install "clace"
      end
    end
  end

  on_linux do
    on_intel do
      if Hardware::CPU.is_64_bit?
        url "https://github.com/claceio/clace/releases/download/v0.11.18/clace-v0.11.18-linux-amd64.tar.gz"
        sha256 "5a7a98c88f67f8f26e6844e4e70a40ae388135b2d5d06d81731d18445ed864b2"

        def install
          bin.install "clace"
        end
      end
    end
    on_arm do
      if Hardware::CPU.is_64_bit?
        url "https://github.com/claceio/clace/releases/download/v0.11.18/clace-v0.11.18-linux-arm64.tar.gz"
        sha256 "f9c970ffe080e0f4c7b0c27aa2eb2041fb13d48652f188c7b6a54843f658d700"

        def install
          bin.install "clace"
        end
      end
    end
  end

  def post_install
    unless File.exist?("#{etc}/clace.toml")
      pid = spawn("#{opt_bin}/clace password", out: "#{etc}/clace.toml")
      puts "********** Initializing \"admin\" user **********"
      Process.wait(pid)
      puts "************* Save this password ****************"

      mkcert_path = `which mkcert`.chomp
      unless mkcert_path.empty?
        system("mkdir -p #{HOMEBREW_PREFIX}/var/clace/config/certificates")
        system("#{mkcert_path} -install")
        system("#{mkcert_path} -cert-file #{HOMEBREW_PREFIX}/var/clace/config/certificates/default.crt -key-file #{HOMEBREW_PREFIX}/var/clace/config/certificates/default.key localhost 127.0.0.1 \"*.localhost\"")
        puts "Created localhost TLS certificates"
      end
    end
  end

  service do
    run [ opt_bin/"clace", "server", "start" ]
    keep_alive true
    working_dir HOMEBREW_PREFIX
    log_path var/"log/clace.log"
    error_log_path var/"log/clace.log"
  end
end
